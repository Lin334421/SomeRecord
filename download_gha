import requests
import json
import threading
import calendar

def download_github_archive(date, hour):
    """
    Download data from GitHub Archive for a specific date and hour.
    :param date: A string representing the date in yyyy-mm-dd format.
    :param hour: An integer representing the hour (0-23).
    :return: None
    """
    url = f"http://data.githubarchive.org/{date}-{hour}.json.gz"
    response = requests.get(url, stream=True)

    if response.status_code == 200:
        with open(f'github_archive_{date}_{hour}.json.gz', 'wb') as file:
            for chunk in response.iter_content(chunk_size=128):
                file.write(chunk)
        print(f"Data for {date} at hour {hour} downloaded successfully.")
    else:
        print(f"Failed to download data for {date} at hour {hour}.")

# Function to download data for an entire year
def download_github_archive_for_year(year):
    threads = []

    for month in range(1, 13):  # Loop through each month (1 to 12)
        for day in range(1, calendar.monthrange(year, month)[1] + 1):  # Loop through each day
            for hour in range(24):  # Loop through each hour (0 to 23)
                date = f"{year}-{month:02d}-{day:02d}"
                thread = threading.Thread(target=download_github_archive, args=(date, hour))
                threads.append(thread)
                thread.start()

    # Wait for all threads to finish
    for thread in threads:
        thread.join()

# Example usage to download data for the year 2024
download_github_archive_for_year(2024)
